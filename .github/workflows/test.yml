name: Test self-hosted runner

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Repository tag to checkout (e.g. "v1.9.0")'
        type: string
        required: true

permissions:
  contents: read
  id-token: write

jobs:
  create_runner:
    name: Create Self-Hosted Runner
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        index: [1, 2]
      fail-fast: true
    environment: dev

    steps:
      - name: Start GitHub Runner
        id: start_runner
        uses: pagopa/interop-github-runner-aws-create-action@main
        with:
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          ecs_task_definition: ${{ secrets.ECS_TASK_DEFINITION }}
          ecs_container_name: github-runner
          ecs_task_subnet_id: ${{ secrets.SUBNET_ID }}
          ecs_task_sec_group: ${{ secrets.SEC_GROUP_ID }}
          pat_token: ${{ secrets.BOT_TOKEN }}

  test_job:
    name: Test Job
    needs: create_runner
    runs-on: [self-hosted, "run_id:${{ github.run_id }}"]
    environment: dev

    steps:
      - name: Checkout
        id: checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: refs/tags/${{ inputs.tag }}
          persist-credentials: false

      - name: 'Test kubectl'
        run: |
          aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name ${{ secrets.EKS_CLUSTER_NAME }}
          kubectl get pods -n dev

  delete_runner:
    name: Delete Self-Hosted Runner
    needs: [create_runner, test_job]
    strategy:
      matrix:
        index: [1, 2]
      fail-fast: true
    if: ${{ always() }}
    runs-on: ubuntu-22.04
    environment: dev

    steps:
      - name: Stop Github Runner
        id: stop_runner
        uses: pagopa/interop-github-runner-aws-cleanup-action@main
        with:
          aws_region: ${{ secrets.AWS_REGION }}
          iam_role_arn: ${{ secrets.ECS_IAM_ROLE_ARN }}
          ecs_cluster_name: ${{ secrets.ECS_CLUSTER_NAME }}
          pat_token: ${{ secrets.BOT_TOKEN }}
